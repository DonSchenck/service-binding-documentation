"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[103],{3905:function(e,n,a){a.d(n,{Zo:function(){return p},kt:function(){return u}});var t=a(7294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function d(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=t.createContext({}),c=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),m=c(a),u=i,g=m["".concat(s,".").concat(u)]||m[u]||l[u]||r;return a?t.createElement(g,o(o({ref:n},p),{},{components:a})):t.createElement(g,o({ref:n},p))}));function u(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=m;var d={};for(var s in n)hasOwnProperty.call(n,s)&&(d[s]=n[s]);d.originalType=e,d.mdxType="string"==typeof e?e:i,o[1]=d;for(var c=2;c<r;c++)o[c]=a[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8997:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return d},metadata:function(){return s},toc:function(){return c},default:function(){return l}});var t=a(7462),i=a(3366),r=(a(7294),a(3905)),o=["components"],d={sidebar_position:4},s={unversionedId:"exposing-binding-data/adding-annotation",id:"exposing-binding-data/adding-annotation",isDocsHomePage:!1,title:"Adding Binding Metadata as Annotations",description:"If your backing service is not compliant with the Service Binding specification",source:"@site/docs/exposing-binding-data/adding-annotation.md",sourceDirName:"exposing-binding-data",slug:"/exposing-binding-data/adding-annotation",permalink:"/service-binding-documentation/docs/exposing-binding-data/adding-annotation",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/exposing-binding-data/adding-annotation.md",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Direct Secret Reference",permalink:"/service-binding-documentation/docs/exposing-binding-data/direct-secret-reference"},next:{title:"Adding Binding Metadata as OLM Descriptors",permalink:"/service-binding-documentation/docs/exposing-binding-data/olm-descriptors"}},c=[{value:"Example: Annotations for a Secret object",id:"example-annotations-for-a-secret-object",children:[]},{value:"Example: Annotations for a ConfigMap object",id:"example-annotations-for-a-configmap-object",children:[]},{value:"Example: Referenced ConfigMap object from a resource",id:"example-referenced-configmap-object-from-a-resource",children:[]},{value:"Exposing an entire Secret as the binding metadata",id:"exposing-an-entire-secret-as-the-binding-metadata",children:[{value:"Example",id:"example",children:[]},{value:"Example: The referenced Secret from the backing service resource",id:"example-the-referenced-secret-from-the-backing-service-resource",children:[]}]},{value:"Exposing an entire config map as the binding metadata",id:"exposing-an-entire-config-map-as-the-binding-metadata",children:[{value:"Example: The referenced ConfigMap from the backing service resource",id:"example-the-referenced-configmap-from-the-backing-service-resource",children:[]}]},{value:"Exposing an entry from a ConfigMap as the binding metadata",id:"exposing-an-entry-from-a-configmap-as-the-binding-metadata",children:[{value:"Example",id:"example-1",children:[]},{value:"Example: The Referenced config map from the backing service resource",id:"example-the-referenced-config-map-from-the-backing-service-resource",children:[]}]},{value:"Exposing an entry from a Secret as the binding metadata",id:"exposing-an-entry-from-a-secret-as-the-binding-metadata",children:[{value:"Example",id:"example-2",children:[]},{value:"Example: The referenced Secret from the backing service resource",id:"example-the-referenced-secret-from-the-backing-service-resource-1",children:[]}]},{value:"Exposing a resource definition value as the binding metadata",id:"exposing-a-resource-definition-value-as-the-binding-metadata",children:[{value:"Example",id:"example-3",children:[]}]},{value:"Exposing the entries of a collection as the binding metadata by selecting the key and value from each entry",id:"exposing-the-entries-of-a-collection-as-the-binding-metadata-by-selecting-the-key-and-value-from-each-entry",children:[{value:"Example",id:"example-4",children:[]},{value:"Example: Binding metadata files",id:"example-binding-metadata-files",children:[]}]},{value:"Exposing the items of a collection as the binding metadata with one key per item",id:"exposing-the-items-of-a-collection-as-the-binding-metadata-with-one-key-per-item",children:[{value:"Example",id:"example-5",children:[]},{value:"Example: Binding metadata files",id:"example-binding-metadata-files-1",children:[]}]},{value:"Exposing the values of collection entries as the binding metadata with one key per entry value",id:"exposing-the-values-of-collection-entries-as-the-binding-metadata-with-one-key-per-entry-value",children:[{value:"Example",id:"example-6",children:[]},{value:"Example: Binding metadata files",id:"example-binding-metadata-files-2",children:[]}]}],p={toc:c};function l(e){var n=e.components,a=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"If your backing service is not compliant with the Service Binding specification\nas a Provisioned Service resource, you can annotate the resources of the backing\nservice to expose the binding metadata with specific annotations.  Adding\nannotations under the metadata section alters the custom resources and CRDs of\nthe backing services.  Using this method, you can create a corresponding mapping\nwith the connectivity values and binding metadata."),(0,r.kt)("p",null,"The Service Binding Operator detects the annotations added to the CRDs and\ncustom resources and creates a Secret service resource with the values extracted\nbased on the annotations.  The Service Binding Operator then projects these\nvalues into the application."),(0,r.kt)("p",null,"The following examples show the annotations that are added under the metadata\nsection and a referenced ConfigMap object from a resource:"),(0,r.kt)("h2",{id:"example-annotations-for-a-secret-object"},"Example: Annotations for a Secret object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: apps.example.org/v1beta1\nkind: Database\nmetadata:\n  name: my-db\n  annotations:\n    "service.binding": "path={.status.data.dbCredentials},objectType=Secret"\nspec:\n  ...\n\nstatus:\n  data:\n    dbCredentials: db-cred\n')),(0,r.kt)("h2",{id:"example-annotations-for-a-configmap-object"},"Example: Annotations for a ConfigMap object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: apps.example.org/v1beta1\nkind: Database\nmetadata:\n  name: my-db\n  annotations:\n    "service.binding/timeout": "path={.status.data.dbConfiguration},objectType=ConfigMap,sourceKey=db_timeout"\nspec:\n  ...\n\nstatus:\n  data:\n    dbConfiguration: db-conf\n')),(0,r.kt)("h2",{id:"example-referenced-configmap-object-from-a-resource"},"Example: Referenced ConfigMap object from a resource"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-config\ndata:\n  db_timeout: "10s"\n  username: "guest"\n')),(0,r.kt)("h2",{id:"exposing-an-entire-secret-as-the-binding-metadata"},"Exposing an entire Secret as the binding metadata"),(0,r.kt)("p",null,"Add the required annotations for the Secret, under the metadata section."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: apps.example.org/v1beta1\nkind: Database\nmetadata:\n  name: my-db\n  annotations:\n    "service.binding": "path={.status.data.dbCredentials},objectType=Secret"\nspec:\n  ...\n\nstatus:\n  data:\n    dbCredentials: db-cred\n')),(0,r.kt)("h3",{id:"example-the-referenced-secret-from-the-backing-service-resource"},"Example: The referenced Secret from the backing service resource"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: v1\nkind: Secret\nmetadata:\n  name: db-cred\ndata:\n  password: "MTBz"\n  username: "Z3Vlc3Q="\n')),(0,r.kt)("h2",{id:"exposing-an-entire-config-map-as-the-binding-metadata"},"Exposing an entire config map as the binding metadata"),(0,r.kt)("p",null,"Add the required annotations for the ConfigMap, under the metadata section."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: apps.example.org/v1beta1\nkind: Database\nmetadata:\n  name: my-db\n  annotations:\n    "service.binding": "path={.status.data.dbConfiguration},objectType=ConfigMap"\nspec:\n  ...\n\nstatus:\n  data:\n    dbConfiguration: db-config\n')),(0,r.kt)("h3",{id:"example-the-referenced-configmap-from-the-backing-service-resource"},"Example: The referenced ConfigMap from the backing service resource"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-config\ndata:\n  db_timeout: "10s"\n  username: "guest"\n')),(0,r.kt)("h2",{id:"exposing-an-entry-from-a-configmap-as-the-binding-metadata"},"Exposing an entry from a ConfigMap as the binding metadata"),(0,r.kt)("p",null,"Add the required annotations for the ConfigMap entry, under the ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata")," section."),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: apps.example.org/v1beta1\nkind: Database\nmetadata:\n  name: my-db\n  annotations:\n    "service.binding/timeout": "path={.status.data.dbConfiguration},objectType=ConfigMap,sourceKey=db_timeout"\nspec:\n  ...\n\nstatus:\n  data:\n    dbConfiguration: db-conf\n')),(0,r.kt)("h3",{id:"example-the-referenced-config-map-from-the-backing-service-resource"},"Example: The Referenced config map from the backing service resource"),(0,r.kt)("p",null,"The binding metadata should have a key with name as ",(0,r.kt)("inlineCode",{parentName:"p"},"timeout")," and value as ",(0,r.kt)("inlineCode",{parentName:"p"},"10s"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-config\ndata:\n  db_timeout: "10s"\n  username: "guest"\n')),(0,r.kt)("h2",{id:"exposing-an-entry-from-a-secret-as-the-binding-metadata"},"Exposing an entry from a Secret as the binding metadata"),(0,r.kt)("p",null,"Adding the required annotations under the ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata")," section."),(0,r.kt)("h3",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: apps.example.org/v1beta1\nkind: Database\nmetadata:\n  name: my-db\n  annotations:\n    "service.binding/timeout": "path={.status.data.dbConfiguration},objectType=Secret,sourceKey=db_timeout"\nspec:\n  ...\n\nstatus:\n  data:\n    dbConfiguration: db-conf\n')),(0,r.kt)("h3",{id:"example-the-referenced-secret-from-the-backing-service-resource-1"},"Example: The referenced Secret from the backing service resource"),(0,r.kt)("p",null,"The binding metadata should have a key with name as ",(0,r.kt)("inlineCode",{parentName:"p"},"timeout")," and value as ",(0,r.kt)("inlineCode",{parentName:"p"},"10s"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: v1\nkind: Secret\nmetadata:\n  name: db-config\ndata:\n  password: "MTBz"\n  username: "Z3Vlc3Q="\n')),(0,r.kt)("h2",{id:"exposing-a-resource-definition-value-as-the-binding-metadata"},"Exposing a resource definition value as the binding metadata"),(0,r.kt)("p",null,"Add the required annotations under the ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata")," section."),(0,r.kt)("h3",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: apps.example.org/v1beta1\nkind: Database\nmetadata:\n  name: my-db\n  annotations:\n    "service.binding/uri":  "path={.status.data.connectionURL}"\nspec:\n  ...\n\nstatus:\n  data:\n    connectionURL: "http://guest:secret123@192.168.1.29/db"\n')),(0,r.kt)("h2",{id:"exposing-the-entries-of-a-collection-as-the-binding-metadata-by-selecting-the-key-and-value-from-each-entry"},"Exposing the entries of a collection as the binding metadata by selecting the key and value from each entry"),(0,r.kt)("p",null,"Add the required annotations under the ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata")," section."),(0,r.kt)("h3",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: apps.example.org/v1beta1\nkind: Database\nmetadata:\n  name: my-db\n  annotations:\n    "service.binding/uri": "path={.status.connections},elementType=sliceOfMaps,sourceKey=type,sourceValue=url"\nspec:\n  ...\n\nstatus:\n  connections:\n    - type: primary\n      url: primary.example.com\n    - type: secondary\n      url: secondary.example.com\n    - type: \'404\'\n      url: black-hole.example.com\n')),(0,r.kt)("h3",{id:"example-binding-metadata-files"},"Example: Binding metadata files"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/bindings/<binding-name>/uri_primary => primary.example.com\n/bindings/<binding-name>/uri_secondary => secondary.example.com\n/bindings/<binding-name>/uri_404 => black-hole.example.com\n")),(0,r.kt)("h2",{id:"exposing-the-items-of-a-collection-as-the-binding-metadata-with-one-key-per-item"},"Exposing the items of a collection as the binding metadata with one key per item"),(0,r.kt)("p",null,"Add the required annotations under the ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata")," section."),(0,r.kt)("h3",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: apps.example.org/v1beta1\nkind: Database\nmetadata:\n  name: my-db\n  annotations:\n    "service.binding/tags": "path={.spec.tags},elementType=sliceOfStrings"\n\nspec:\n    tags:\n      - knowledge\n      - is\n      - power\n')),(0,r.kt)("h3",{id:"example-binding-metadata-files-1"},"Example: Binding metadata files"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/bindings/<binding-name>/tags_0 => knowledge\n/bindings/<binding-name>/tags_1 => is\n/bindings/<binding-name>/tags_2 => power\n")),(0,r.kt)("h2",{id:"exposing-the-values-of-collection-entries-as-the-binding-metadata-with-one-key-per-entry-value"},"Exposing the values of collection entries as the binding metadata with one key per entry value"),(0,r.kt)("p",null,"Add the required annotations under the ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata")," section."),(0,r.kt)("h3",{id:"example-6"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: apps.example.org/v1beta1\nkind: Database\nmetadata:\n  name: my-db\n  annotations:\n    "service.binding/url": "path={.spec.connections},elementType=sliceOfStrings,sourceValue=url"\n\nspec:\n    connections:\n      - type: primary\n        url: primary.example.com\n      - type: secondary\n        url: secondary.example.com\n      - type: \'404\'\n        url: black-hole.example.com\n')),(0,r.kt)("h3",{id:"example-binding-metadata-files-2"},"Example: Binding metadata files"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/bindings/<binding-name>/url_primary => primary.example.com\n/bindings/<binding-name>/url_secondary => secondary.example.com\n/bindings/<binding-name>/url_404 => black-hole.example.com\n")))}l.isMDXComponent=!0}}]);