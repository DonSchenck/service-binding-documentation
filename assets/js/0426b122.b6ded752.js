"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[414],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=i.createContext({}),d=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=d(e.components);return i.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(t),m=a,g=u["".concat(l,".").concat(m)]||u[m]||c[m]||r;return t?i.createElement(g,o(o({ref:n},p),{},{components:t})):i.createElement(g,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var d=2;d<r;d++)o[d]=t[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1508:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d},default:function(){return c}});var i=t(7462),a=t(3366),r=(t(7294),t(3905)),o=["components"],s={sidebar_position:1},l={unversionedId:"using-injected-bindings/using-injected-bindings",id:"using-injected-bindings/using-injected-bindings",isDocsHomePage:!1,title:"General Concept",description:"When using the Service Binding operator, a set of binding metadata are projected",source:"@site/docs/using-injected-bindings/using-injected-bindings.md",sourceDirName:"using-injected-bindings",slug:"/using-injected-bindings/using-injected-bindings",permalink:"/service-binding-documentation/docs/using-injected-bindings/using-injected-bindings",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/using-injected-bindings/using-injected-bindings.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Service Binding Resource",permalink:"/service-binding-documentation/docs/creating-service-bindings/service-binding-resource"},next:{title:"Introduction",permalink:"/service-binding-documentation/docs/exposing-binding-data/intro-expose-binding"}},d=[{value:"Understanding the consumption of binding metadata",id:"understanding-the-consumption-of-binding-metadata",children:[]},{value:"Using Binding metadata injected as files",id:"using-binding-metadata-injected-as-files",children:[{value:"Table: Summary of the final path computation",id:"table-summary-of-the-final-path-computation",children:[]},{value:"Example: Python client usage",id:"example-python-client-usage",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]}]}],p={toc:d};function c(e){var n=e.components,t=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When using the Service Binding operator, a set of binding metadata are projected\ninto your application using the following methods:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"By default, as files."),(0,r.kt)("li",{parentName:"ul"},"As environment variables, if the value for the ",(0,r.kt)("inlineCode",{parentName:"li"},".spec.bindAsFiles")," parameter\nis set to ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," in the ",(0,r.kt)("inlineCode",{parentName:"li"},"ServiceBinding")," resource.")),(0,r.kt)("h2",{id:"understanding-the-consumption-of-binding-metadata"},"Understanding the consumption of binding metadata"),(0,r.kt)("p",null,"The primary mechanism of projection is through files mounted at a specific\ndirectory.  The bindings directory path can be discovered through\n",(0,r.kt)("inlineCode",{parentName:"p"},"SERVICE_BINDING_ROOT")," environment variable setup in your application."),(0,r.kt)("p",null,"Within this service binding root directory, there can be multiple bindings\nprojected from different Service Bindings.  For example, if an application\nrequires to connect to a database and cache server.  In that case, one Service\nBinding can provide the database, and the other Service Binding can provide\nbindings to the cache server."),(0,r.kt)("p",null,"Let's take a look at the example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$SERVICE_BINDING_ROOT\n\u251c\u2500\u2500 account-database\n\u2502   \u251c\u2500\u2500 type\n\u2502   \u251c\u2500\u2500 provider\n\u2502   \u251c\u2500\u2500 uri\n\u2502   \u251c\u2500\u2500 username\n\u2502   \u2514\u2500\u2500 password\n\u2514\u2500\u2500 transaction-event-stream\n    \u251c\u2500\u2500 type\n    \u251c\u2500\u2500 connection-count\n    \u251c\u2500\u2500 uri\n    \u251c\u2500\u2500 certificates\n    \u2514\u2500\u2500 private-key\n")),(0,r.kt)("p",null,"In the previous example, there are two bindings under the ",(0,r.kt)("inlineCode",{parentName:"p"},"SERVICE_BINDING_ROOT"),"\ndirectory.  The ",(0,r.kt)("inlineCode",{parentName:"p"},"account-database")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"transaction-event-stream")," are the names\nof the bindings.  Files within each bindings directory has a special file named\n",(0,r.kt)("inlineCode",{parentName:"p"},"type"),", and you can rely on the value of that file to identify the type of the\nbinding projected into that directory.  In certain directories, you can also see\nanother file named ",(0,r.kt)("inlineCode",{parentName:"p"},"provider"),".  The provider is an additional identifier to\nnarrow down the type further.  Retrieving the bindings through the bindings\ndirectory name is not a good practice -- it makes your application less\nportable.  Always use the ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," field and, if necessary, ",(0,r.kt)("inlineCode",{parentName:"p"},"provider")," to look up\nthe bindings."),(0,r.kt)("p",null,"The Service Binding Operators uses ",(0,r.kt)("inlineCode",{parentName:"p"},"ServiceBinding")," resource name\n(",(0,r.kt)("inlineCode",{parentName:"p"},".metadata.name"),") as the bindings directory name, but the spec also provides a\nway to override that name through the ",(0,r.kt)("inlineCode",{parentName:"p"},".spec.name")," field. So, there is a chance\nfor bindings name collision.  However, due to the nature of the volume mount in\nKubernetes, the bindings directory will contain values from only one of the\nSecret resources.  This is a caveat of using the bindings directory name to look\nup the bindings."),(0,r.kt)("h2",{id:"using-binding-metadata-injected-as-files"},"Using Binding metadata injected as files"),(0,r.kt)("p",null,"For determining the folder where bindings are injected, you can check the\n",(0,r.kt)("inlineCode",{parentName:"p"},".spec.mountPath")," value from the ",(0,r.kt)("inlineCode",{parentName:"p"},"ServiceBinding")," resource which specifies the\ndestination used for the injection."),(0,r.kt)("p",null,"Alternatively, you can also check ",(0,r.kt)("inlineCode",{parentName:"p"},"SERVICE_BINDING_ROOT")," environment variable in\nthe application resource.  If both are set then the ",(0,r.kt)("inlineCode",{parentName:"p"},"SERVICE_BINDING_ROOT"),"\nenvironment variable takes the higher precedence."),(0,r.kt)("h3",{id:"table-summary-of-the-final-path-computation"},"Table: Summary of the final path computation"),(0,r.kt)("p",null,"The following table summarizes how the final bind path is computed:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},".spec.mountPath"),(0,r.kt)("th",{parentName:"tr",align:null},"SERVICE_BINDING_ROOT"),(0,r.kt)("th",{parentName:"tr",align:null},"Final Path"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nil"),(0,r.kt)("td",{parentName:"tr",align:null},"non-existent"),(0,r.kt)("td",{parentName:"tr",align:null},"/bindings/ServiceBinding_Name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nil"),(0,r.kt)("td",{parentName:"tr",align:null},"/some/path/root"),(0,r.kt)("td",{parentName:"tr",align:null},"/some/path/root/<ServiceBinding_Name>")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"/home/foo"),(0,r.kt)("td",{parentName:"tr",align:null},"non-existent"),(0,r.kt)("td",{parentName:"tr",align:null},"/home/foo")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"/home/foo"),(0,r.kt)("td",{parentName:"tr",align:null},"/some/path/root"),(0,r.kt)("td",{parentName:"tr",align:null},"/some/path/root/<ServiceBinding_Name>")))),(0,r.kt)("p",null,"You can use the built-in language feature of your programming language of choice\nto read environment variables."),(0,r.kt)("p",null,"For accessing bindings within ",(0,r.kt)("inlineCode",{parentName:"p"},"SERVICE_BINDING_ROOT"),", there are language or\nframework specific programs:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Python: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/baijum/pyservicebinding"},"https://github.com/baijum/pyservicebinding")),(0,r.kt)("li",{parentName:"ol"},"Go: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/baijum/servicebinding"},"https://github.com/baijum/servicebinding")),(0,r.kt)("li",{parentName:"ol"},"Java/Spring: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/spring-cloud/spring-cloud-bindings"},"https://github.com/spring-cloud/spring-cloud-bindings")),(0,r.kt)("li",{parentName:"ol"},"Quarkus: ",(0,r.kt)("a",{parentName:"li",href:"https://quarkus.io/guides/deploying-to-kubernetes#service-binding"},"https://quarkus.io/guides/deploying-to-kubernetes#service-binding")),(0,r.kt)("li",{parentName:"ol"},"JS/Node: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/nodeshift/kube-service-bindings"},"https://github.com/nodeshift/kube-service-bindings"))),(0,r.kt)("p",null,"Note: All these libraries expect ",(0,r.kt)("inlineCode",{parentName:"p"},"SERVICE_BINDING_ROOT")," to be set."),(0,r.kt)("h3",{id:"example-python-client-usage"},"Example: Python client usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'from pyservicebinding import binding\ntry:\n    sb = binding.ServiceBinding()\nexcept binding.ServiceBindingRootMissingError as msg:\n    # log the error message and retry/exit\n    print("SERVICE_BINDING_ROOT env var not set")\n\nsb = binding.ServiceBinding()\n\nbindings_list = sb.bindings("postgresql")\n')),(0,r.kt)("p",null,"In the previous example, the ",(0,r.kt)("inlineCode",{parentName:"p"},"bindings_list")," parameter contains the binding\nmetadata for the ",(0,r.kt)("inlineCode",{parentName:"p"},"postgresql")," type.  For full API, see the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/baijum/pyservicebinding"},"documentation"),"."),(0,r.kt)("h3",{id:"environment-variables"},"Environment Variables"),(0,r.kt)("p",null,"The spec also has support for projecting environment variables.  You can use the\nbuilt-in language feature of your programming language of choice to read\nenvironment variables.  The container must restart to update the values of\nenvironment variables if there is a change in the Secret resource."),(0,r.kt)("p",null,"Here is example Python client usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'import os\n\nusername = os.getenv("USERNAME")\npassword = os.getenv("PASSWORD")\n')))}c.isMDXComponent=!0}}]);