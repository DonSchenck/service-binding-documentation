"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[78],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=i,f=m["".concat(c,".").concat(u)]||m[u]||l[u]||a;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9682:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return l}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],s={sidebar_position:4},c={unversionedId:"exposing-binding-data/extracting-from-k8s-resources",id:"exposing-binding-data/extracting-from-k8s-resources",isDocsHomePage:!1,title:"Extracting Binding Metadata from Kubernetes Resource",description:"Extract a string from a Kubernetes resource",source:"@site/docs/exposing-binding-data/extracting-from-k8s-resources.md",sourceDirName:"exposing-binding-data",slug:"/exposing-binding-data/extracting-from-k8s-resources",permalink:"/service-binding-documentation/docs/exposing-binding-data/extracting-from-k8s-resources",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/exposing-binding-data/extracting-from-k8s-resources.md",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Adding Binding Metadata as Annotations",permalink:"/service-binding-documentation/docs/exposing-binding-data/adding-annotation"},next:{title:"Sample 1",permalink:"/service-binding-documentation/docs/samples/sample-1"}},p=[{value:"Extract a string from a Kubernetes resource",id:"extract-a-string-from-a-kubernetes-resource",children:[]},{value:"Extract a string from the Kubernetes resource, and map it to custom name in the binding Secret",id:"extract-a-string-from-the-kubernetes-resource-and-map-it-to-custom-name-in-the-binding-secret",children:[]},{value:"Extract an entire configmap/Secret from the Kubernetes resource",id:"extract-an-entire-configmapsecret-from-the-kubernetes-resource",children:[]},{value:"Extract a specific field from the configmap/Secret from the Kubernetes resource, and bind it as an environment variable",id:"extract-a-specific-field-from-the-configmapsecret-from-the-kubernetes-resource-and-bind-it-as-an-environment-variable",children:[]},{value:"Extract a specific field from the configmap/Secret from the Kubernetes resource and and bind it as a volume mount",id:"extract-a-specific-field-from-the-configmapsecret-from-the-kubernetes-resource-and-and-bind-it-as-a-volume-mount",children:[]},{value:"Extract a specific field from the configmap/Secret from the Kubernetes resource and map it to different name in the binding Secret",id:"extract-a-specific-field-from-the-configmapsecret-from-the-kubernetes-resource-and-map-it-to-different-name-in-the-binding-secret",children:[]},{value:"Extract a \u201cslice of maps\u201d from the Kubernetes resource and generate multiple fields in the binding Secret",id:"extract-a-slice-of-maps-from-the-kubernetes-resource-and-generate-multiple-fields-in-the-binding-secret",children:[]},{value:"Extract a \u201cslice of strings\u201d from a Kubernetes resource and indicate the content in a specific index in the slice to be relevant for binding",id:"extract-a-slice-of-strings-from-a-kubernetes-resource-and-indicate-the-content-in-a-specific-index-in-the-slice-to-be-relevant-for-binding",children:[]},{value:"Extract binding information from the Kubernetes resource using Go templates and generate multiple fields in the binding Secret <kbd>EXPERIMENTAL</kbd>",id:"extract-binding-information-from-the-kubernetes-resource-using-go-templates-and-generate-multiple-fields-in-the-binding-secret-experimental",children:[]}],d={toc:p};function l(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"extract-a-string-from-a-kubernetes-resource"},"Extract a string from a Kubernetes resource"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"List of use cases:")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Provide Sample")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Annotation + descriptor")," "),(0,a.kt)("h2",{id:"extract-a-string-from-the-kubernetes-resource-and-map-it-to-custom-name-in-the-binding-secret"},"Extract a string from the Kubernetes resource, and map it to custom name in the binding Secret"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"List of use cases:")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Provide Sample")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Annotation + descriptor")," "),(0,a.kt)("h2",{id:"extract-an-entire-configmapsecret-from-the-kubernetes-resource"},"Extract an entire configmap/Secret from the Kubernetes resource"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"List of use cases:")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Provide Sample")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Annotation + descriptor")," "),(0,a.kt)("h2",{id:"extract-a-specific-field-from-the-configmapsecret-from-the-kubernetes-resource-and-bind-it-as-an-environment-variable"},"Extract a specific field from the configmap/Secret from the Kubernetes resource, and bind it as an environment variable"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"List of use cases:")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Provide Sample")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Annotation + descriptor")," "),(0,a.kt)("h2",{id:"extract-a-specific-field-from-the-configmapsecret-from-the-kubernetes-resource-and-and-bind-it-as-a-volume-mount"},"Extract a specific field from the configmap/Secret from the Kubernetes resource and and bind it as a volume mount"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"List of use cases:")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Provide Sample")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Annotation + descriptor")," "),(0,a.kt)("h2",{id:"extract-a-specific-field-from-the-configmapsecret-from-the-kubernetes-resource-and-map-it-to-different-name-in-the-binding-secret"},"Extract a specific field from the configmap/Secret from the Kubernetes resource and map it to different name in the binding Secret"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"List of use cases:")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Provide Sample")),(0,a.kt)("h2",{id:"extract-a-slice-of-maps-from-the-kubernetes-resource-and-generate-multiple-fields-in-the-binding-secret"},"Extract a \u201cslice of maps\u201d from the Kubernetes resource and generate multiple fields in the binding Secret"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"List of use cases:")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Provide Sample")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Annotation + descriptor")," "),(0,a.kt)("h2",{id:"extract-a-slice-of-strings-from-a-kubernetes-resource-and-indicate-the-content-in-a-specific-index-in-the-slice-to-be-relevant-for-binding"},"Extract a \u201cslice of strings\u201d from a Kubernetes resource and indicate the content in a specific index in the slice to be relevant for binding"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Provide Sample")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"List of use cases:")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Annotation + descriptor")," "),(0,a.kt)("h2",{id:"extract-binding-information-from-the-kubernetes-resource-using-go-templates-and-generate-multiple-fields-in-the-binding-secret-experimental"},"Extract binding information from the Kubernetes resource using Go templates and generate multiple fields in the binding Secret ",(0,a.kt)("kbd",null,"EXPERIMENTAL")),(0,a.kt)("p",null,"Requirement: ",(0,a.kt)("em",{parentName:"p"},"Extract binding information from the Kubernetes resource using Go templates and generate multiple fields in the binding Secret.")),(0,a.kt)("p",null,"A sample Kafka CR:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"    apiVersion: kafka.strimzi.io/v1alpha1\n    kind: Kafka\n    metadata:\n      name: my-cluster\n    ...\n    status:\n      listeners:\n        - type: plain\n          addresses:\n            - host: my-cluster-kafka-bootstrap.service-binding-demo.svc\n              port: 9092\n            - host: my-cluster-kafka-bootstrap.service-binding-demo.svc\n              port: 9093\n        - type: tls\n          addresses:\n            - host: my-cluster-kafka-bootstrap.service-binding-demo.svc\n              port: 9094\n")),(0,a.kt)("p",null,"Go Template:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    {{- range $idx1, $lis := .status.listeners -}}\n      {{- range $idx2, $adr := $el1.addresses -}}\n        {{ $lis.type }}_{{ $idx2 }}={{ printf "%s:%s\\n" "$adr.host" "$adr.port" | b64enc | quote }}\n      {{- end -}}\n    {{- end -}}\n')),(0,a.kt)("p",null,"The above Go template produces the following string when executed on the sample Kafka CR:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    plain_0="<base64 encoding of my-cluster-kafka-bootstrap.service-binding-demo.svc:9092>"\n    plain_1="<base64 encoding of my-cluster-kafka-bootstrap.service-binding-demo.svc:9093>"\n    tls_0="<base64 encoding of my-cluster-kafka-bootstrap.service-binding-demo.svc:9094>"\n')),(0,a.kt)("p",null,"The string can then be parsed into key-value pairs to be added into the final binding secret. The Go template above can be written as one-liner and added as ",(0,a.kt)("inlineCode",{parentName:"p"},"{{GO TEMPLATE}}")," in the annotation and descriptor below."),(0,a.kt)("p",null,"Annotation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    \u201cservice.binding:\n    "path={.status.listeners},elementType=template,source={{GO TEMPLATE}}"\n    ```\n\n    Descriptor\n\n    ```\n    - path: listeners\n      x-descriptors:\n        - service.binding:elementType=template:source={{GO TEMPLATE}}\n')))}l.isMDXComponent=!0}}]);