"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[114],{3905:function(e,n,i){i.d(n,{Zo:function(){return d},kt:function(){return m}});var t=i(7294);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function o(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function a(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?o(Object(i),!0).forEach((function(n){r(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function c(e,n){if(null==e)return{};var i,t,r=function(e,n){if(null==e)return{};var i,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)i=o[t],n.indexOf(i)>=0||(r[i]=e[i]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)i=o[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=t.createContext({}),p=function(e){var n=t.useContext(s),i=n;return e&&(i="function"==typeof e?e(n):a(a({},n),e)),i},d=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var i=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=p(i),m=r,v=u["".concat(s,".").concat(m)]||u[m]||l[m]||o;return i?t.createElement(v,a(a({ref:n},d),{},{components:i})):t.createElement(v,a({ref:n},d))}));function m(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=i.length,a=new Array(o);a[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var p=2;p<o;p++)a[p]=i[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,i)}u.displayName="MDXCreateElement"},3974:function(e,n,i){i.r(n),i.d(n,{frontMatter:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return l}});var t=i(7462),r=i(3366),o=(i(7294),i(3905)),a=["components"],c={sidebar_position:2},s={unversionedId:"exposing-binding-data/provisioned-service",id:"exposing-binding-data/provisioned-service",isDocsHomePage:!1,title:"Provisioned Service",description:"As a backing service author or provider, you can use this method to be compliant",source:"@site/docs/exposing-binding-data/provisioned-service.md",sourceDirName:"exposing-binding-data",slug:"/exposing-binding-data/provisioned-service",permalink:"/service-binding-documentation/docs/exposing-binding-data/provisioned-service",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/exposing-binding-data/provisioned-service.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/service-binding-documentation/docs/exposing-binding-data/intro-expose-binding"},next:{title:"Direct Secret Reference",permalink:"/service-binding-documentation/docs/exposing-binding-data/direct-secret-reference"}},p=[{value:"Example: AccountService resource",id:"example-accountservice-resource",children:[]},{value:"Example: Specification with the binding.operators.coreos.com API",id:"example-specification-with-the-bindingoperatorscoreoscom-api",children:[]},{value:"Example: Specification that is compliant with the service.binding API",id:"example-specification-that-is-compliant-with-the-servicebinding-api",children:[]}],d={toc:p};function l(e){var n=e.components,i=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,t.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"As a backing service author or provider, you can use this method to be compliant\nwith the Service Binding specification."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/k8s-service-bindings/spec#provisioned-service"},"Provisioned Service")," represents a backing service custom\nresource with a reference to a Secret resource.  The Secret resource provides\nall the binding metadata values required for an application to connect to the\nbacking service.  You must provide the reference to the Secret service resource\nin the ",(0,o.kt)("inlineCode",{parentName:"p"},".status.binding.name")," attribute of the custom resource."),(0,o.kt)("p",null,"The following examples show an ",(0,o.kt)("inlineCode",{parentName:"p"},"AccountService")," resource that represents a\nbacking service and a ",(0,o.kt)("inlineCode",{parentName:"p"},"Secret")," service resource. As a backing service author,\nyou can create a ",(0,o.kt)("inlineCode",{parentName:"p"},"Secret")," service resource with all the necessary connection\ndetails and refer them using the ",(0,o.kt)("inlineCode",{parentName:"p"},".status.binding.name")," field."),(0,o.kt)("h2",{id:"example-accountservice-resource"},"Example: AccountService resource"),(0,o.kt)("p",null,"This example shows an ",(0,o.kt)("inlineCode",{parentName:"p"},"AccountService")," resource with relavant details:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apiVersion: example.com/v1alpha1\nkind: AccountService\nname: prod-account-service\nspec:\n  ...\nstatus:\n  binding:\n    name: production-db-secret\n")),(0,o.kt)("p",null,"This is the referenced Secret:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'apiVersion: v1\nkind: Secret\nmetadata:\n  name: production-db-secret\ndata:\n  password: "MTBz"\n  username: "Z3Vlc3Q="\n')),(0,o.kt)("p",null,"When creating service binding, directly give the details of the ",(0,o.kt)("inlineCode",{parentName:"p"},"AccountService"),"\nresource in the following ",(0,o.kt)("inlineCode",{parentName:"p"},"ServiceBinding")," specifications:"),(0,o.kt)("h2",{id:"example-specification-with-the-bindingoperatorscoreoscom-api"},"Example: Specification with the binding.operators.coreos.com API"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'apiVersion: binding.operators.coreos.com/v1alpha1\nkind: ServiceBinding\nmetadata:\n  name: account-service\nspec:\n  ...\n  services:\n  - group: "example.com"\n    version: v1alpha1\n    kind: AccountService\n    name: prod-account-service\n  application:\n    name: nodejs-app\n    group: apps\n    version: v1\n    resource: deployments\n')),(0,o.kt)("h2",{id:"example-specification-that-is-compliant-with-the-servicebinding-api"},"Example: Specification that is compliant with the service.binding API"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apiVersion: service.binding/v1alpha2\nkind: ServiceBinding\nmetadata:\n  name: account-service\n\nspec:\n  ...\n  service:\n    apiVersion: example.com/v1alpha1\n    kind: AccountService\n    name: prod-account-service\n  application:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: nodejs-app\n")),(0,o.kt)("p",null,"All the keys in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Secret")," resource are exposed as binding metadata and\nprojected into the application."))}l.isMDXComponent=!0}}]);